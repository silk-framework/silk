GET        /dialogs/:project/workflowDialog                     controllers.workflow.Dialogs.workflowTaskDialog(project: String)
GET        /activityControl                                     controllers.workflow.WorkflowEditorController.activityControl(projectId, taskId)

GET        /report/:project/:task                               controllers.workflow.WorkflowEditorController.reports(project: String, task: String)
GET        /report/:project/:task/:report                       controllers.workflow.WorkflowEditorController.report(project: String, task: String, report: String)
GET        /workflowNodeReport/:project/:task/:nodeId           controllers.workflow.WorkflowEditorController.workflowNodeReport(project: String, task: String, nodeId: String)

GET        /workflows/:project                                  controllers.workflow.WorkflowApi.getWorkflows(project: String)

POST       /workflows/:project                                  controllers.workflow.WorkflowApi.postWorkflow(project: String)
PUT        /workflows/:project/:task                            controllers.workflow.WorkflowApi.putWorkflow(project: String, task: String)
GET        /workflows/:project/:task                            controllers.workflow.WorkflowApi.getWorkflow(project: String, task: String)
DELETE     /workflows/:project/:task                            controllers.workflow.WorkflowApi.deleteWorkflow(project: String, task: String)

PUT        /workflows/:project/:task/execute                    controllers.workflow.WorkflowApi.executeWorkflow(project: String, task: String)
GET        /workflows/:project/:task/status                     controllers.workflow.WorkflowApi.status(project: String, task: String)

# Assests
GET        /assets/*file                                        controllers.workflow.Assets.at(path="/public/lib/silk-workbench-workflow", file)

# Execution
POST       /workflows/:project/:task/executeOnPayload              controllers.workflow.WorkflowApi.postVariableWorkflowInput(project: String, task: String)
POST       /workflows/:project/:task/executeOnPayloadAsynchronous  controllers.workflow.WorkflowApi.postVariableWorkflowInputAsynchronous(project: String, task: String)
DELETE     /workflows/:project/:task/execution/:executionId        controllers.workflow.WorkflowApi.removeVariableWorkflowExecution(project: String, task: String, executionId: String)