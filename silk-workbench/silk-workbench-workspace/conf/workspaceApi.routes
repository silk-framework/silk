# Generic item search/retrieval, i.e. projects, tasks etc.
GET           /searchConfig/types                                               controllers.workspaceApi.SearchApi.itemTypes(projectId: Option[String] ?= None)
POST          /searchTasks                                                      controllers.workspaceApi.SearchApi.search()
POST          /searchItems                                                      controllers.workspaceApi.SearchApi.facetedSearch()
POST          /pluginParameterAutoCompletion                                    controllers.workspaceApi.SearchApi.parameterAutoCompletion()
GET           /recentlyViewedItems                                              controllers.workspaceApi.SearchApi.recentlyViewedItems()
GET           /initFrontend                                                     controllers.workspaceApi.InitApi.init()

GET           /taskActivitiesStatus                                             controllers.workspaceApi.ActivitiesApi.taskActivitiesStatus(projectId: Option[String] ?= None, statusFilter: Option[String] ?= None)
POST          /searchActivities                                                 controllers.workspaceApi.ActivitiesApi.activitySearch()

POST          /projectImport                                                    controllers.workspaceApi.ProjectImportApi.uploadProjectArchiveFile()
GET           /projectImport/:projectImportId                                   controllers.workspaceApi.ProjectImportApi.projectImportDetails(projectImportId: String)
DELETE        /projectImport/:projectImportId                                   controllers.workspaceApi.ProjectImportApi.removeProjectImport(projectImportId: String)
POST          /projectImport/:projectImportId                                   controllers.workspaceApi.ProjectImportApi.startProjectImport(projectImportId: String, generateNewId: Boolean ?= false, overwriteExisting: Boolean ?= false, newProjectId: Option[String] ?= None)
GET           /projectImport/:projectImportId/status                            controllers.workspaceApi.ProjectImportApi.projectImportExecutionStatus(projectImportId: String, timeout: Int ?= 20000)
GET           /vocabularies                                                     controllers.workspaceApi.WorkspaceVocabularyApi.vocabularies()
GET           /vocabularies/property/search                                     controllers.workspaceApi.WorkspaceVocabularyApi.findPropertyInGlobalVocabularyCache(textQuery: String, projectId: String ?= "", limit: Int)
POST          /uriPatterns                                                      controllers.workspaceApi.WorkspaceUriPatternApi.uriPatterns()

# Execution Report API
GET           /reports/list                                                     controllers.workspaceApi.ReportsApi.listReports(projectId: Option[String] ?= None, taskId: Option[String] ?= None)
GET           /reports/report                                                   controllers.workspaceApi.ReportsApi.retrieveReport(projectId, taskId, time)

GET           /reports/currentReport/value                                      controllers.workspaceApi.ReportsApi.currentReport(projectId, taskId)
GET           /reports/currentReport/nodeReports                                controllers.workspaceApi.ReportsApi.currentWorkflowNodeReport(projectId, taskId, nodeId)
GET           /reports/currentReport/updates                                    controllers.workspaceApi.ReportsApi.currentReportUpdates(projectId, taskId, timestamp: Long ?= 0)
GET           /reports/currentReport/updatesWebSocket                           controllers.workspaceApi.ReportsApi.currentReportUpdatesWebsocket(projectId, taskId)

# Validation

POST          /validation/sourcePath/:projectId                                 controllers.workspaceApi.ValidationApi.validateSourcePath(projectId: String)
POST          /validation/uriPattern/:projectId                                 controllers.workspaceApi.ValidationApi.validateUriPattern(projectId: String)

->            /projects                   projectsApi.Routes
