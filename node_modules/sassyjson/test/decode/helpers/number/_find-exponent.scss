@include describe("The _find-exponent function") {
  @include it("should always return a two item long list") {
    @include should(expect(length(_find-exponent('e1', 1))), to(equal(2)));
    @include should(expect(length(_find-exponent('e2', 1))), to(equal(2)));
    @include should(expect(length(_find-exponent('e5', 1))), to(equal(2)));
    @include should(expect(length(_find-exponent('e10', 1))), to(equal(2)));
  }

  @include it("should return the exponent part of a stringified number as a second argument") {
    @include should(expect(nth(_find-exponent('e-1', 1), 2)), to(equal(-1)));
    @include should(expect(nth(_find-exponent('e0', 1), 2)), to(equal(0)));
    @include should(expect(nth(_find-exponent('e2', 1), 2)), to(equal(2)));
    @include should(expect(nth(_find-exponent('e-3', 1), 2)), to(equal(-3)));
    @include should(expect(nth(_find-exponent('e4', 1), 2)), to(equal(4)));
    @include should(expect(nth(_find-exponent('e-5', 1), 2)), to(equal(-5)));
    @include should(expect(nth(_find-exponent('e6', 1), 2)), to(equal(6)));
    @include should(expect(nth(_find-exponent('e-7', 1), 2)), to(equal(-7)));
    @include should(expect(nth(_find-exponent('e8', 1), 2)), to(equal(8)));
    @include should(expect(nth(_find-exponent('e-9', 1), 2)), to(equal(-9)));
  }

  @include it("should return a number as second argument") {
    @include should(expect(type-of(nth(_find-exponent('e-1', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e2', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e-3', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e4', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e-5', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e6', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e-7', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e8', 1), 2))), to(equal('number')));
    @include should(expect(type-of(nth(_find-exponent('e-9', 1), 2))), to(equal('number')));
  }

  @include it("should return null if error") {
    @include should(expect(nth(_find-exponent('e', 1), 2)), to(equal(null)));
    @include should(expect(nth(_find-exponent('e-', 1), 2)), to(equal(null)));
    @include should(expect(nth(_find-exponent('e+', 1), 2)), to(equal(null)));
  }
}
