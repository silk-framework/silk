<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="MetaData">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="Label" minOccurs="0" maxOccurs="1" type="xs:string"/>
                <xs:element name="Description" minOccurs="0" maxOccurs="1" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="Dataset">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="DatasetPlugin"  minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attribute name="type" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="required"/>
            <xs:attribute name="type" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>

    <!-- DataSource elements have been replaced by Datasets but are still supported -->
    <xs:element name="DataSource">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="required"/>
            <xs:attribute name="type" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Param">
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="value" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="AnyInput" abstract="true"/>

    <xs:element name="Input" substitutionGroup="AnyInput">
        <xs:complexType>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="path" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="TransformInput" substitutionGroup="AnyInput">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="AnyInput" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="function" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Compare">
        <xs:complexType>
            <xs:sequence>
                <!-- Errors if number of inputs is different from 2 are handled in code to give better error messages -->
                <xs:element ref="AnyInput" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="metric" type="xs:string" use="required"/>
            <xs:attribute name="threshold" type="xs:double"/>
            <xs:attribute name="weight" type="xs:unsignedShort"/>
            <xs:attribute name="required" type="xs:boolean"/>
            <xs:attribute name="indexing" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Aggregate">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="Aggregate"/>
                    <xs:element ref="Compare"/>
                    <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="type" type="xs:string" use="required"/>
            <xs:attribute name="weight" type="xs:unsignedShort"/>
            <xs:attribute name="required" type="xs:boolean"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Filter">
        <xs:complexType>
            <xs:attribute name="threshold" type="xs:decimal" use="optional"/>
            <xs:attribute name="limit" type="xs:unsignedShort" use="optional"/>
            <xs:attribute name="unambiguous" type="xs:boolean" use="optional" default="false"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="LinkageRule">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="1">
                    <xs:element ref="Aggregate"/>
                    <xs:element ref="Compare"/>
                </xs:choice>
                <xs:element ref="Filter" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="linkType" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="MappingRules">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element ref="TransformRule"/>
                    <xs:element ref="ObjectMapping"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="TransformRule">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MetaData" minOccurs="0"/>
                <xs:choice minOccurs="1" maxOccurs="1">
                    <xs:element ref="Input"/>
                    <xs:element ref="TransformInput"/>
                </xs:choice>
                <xs:element ref="MappingTarget" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="targetProperty" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="RootMappingRule">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MetaData" minOccurs="0"/>
                <xs:element ref="MappingRules"  minOccurs="1" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ObjectMapping">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MetaData" minOccurs="0"/>
                <xs:element ref="MappingRules"  minOccurs="1" maxOccurs="1" />
                <xs:element ref="MappingTarget" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="relativePath" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="MappingTarget">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ValueType" />
            </xs:sequence>
            <xs:attribute name="uri" type="xs:string"/>
            <xs:attribute name="isBackwardProperty" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="ValueType">
        <xs:complexType>
            <xs:attribute name="nodeType" type="xs:string" />
            <xs:attribute name="uri" type="xs:string" />
            <xs:attribute name="lang" type="xs:string" />
        </xs:complexType>
    </xs:element>

    <xs:element name="Outputs">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Output" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="Dataset" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="Output">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="Param" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="optional"/>
            <xs:attribute name="name" type="xs:string" use="optional"/>
            <!-- deprecated -->
            <xs:attribute name="type" type="xs:string"/>
            <xs:attribute name="minConfidence" type="xs:decimal" use="optional"/>
            <xs:attribute name="maxConfidence" type="xs:decimal" use="optional"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="SourceDataset">
        <xs:complexType>
            <xs:choice>
                <xs:element name="RestrictTo" minOccurs="0" type="xs:string"/>
            </xs:choice>
            <xs:attribute name="dataSource" type="xs:string" use="required"/>
            <xs:attribute name="var" type="xs:string" use="required"/>
            <xs:attribute name="typeUri" type="xs:string" use="optional"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Transform">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="MetaData" minOccurs="0"/>

                <xs:element ref="SourceDataset" minOccurs="1" maxOccurs="1"/>

                <xs:element ref="TransformRule" minOccurs="0" maxOccurs="unbounded"/> <!-- old format -->
                <xs:element ref="ObjectMapping" minOccurs="0" maxOccurs="unbounded"/>  <!-- old format -->

                <xs:element ref="RootMappingRule" minOccurs="0" maxOccurs="1"/>

                <xs:element ref="Outputs" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>

            <xs:attribute name="id" type="xs:string" use="required"/>
        </xs:complexType>

    </xs:element>

    <xs:element name="Interlink">
        <xs:complexType>
            <xs:sequence>

                <xs:element ref="MetaData" minOccurs="0"/>

                <!-- Deprecated: LinkType is now an attribute of a linkage rule -->
                <xs:element name="LinkType" type="xs:string" minOccurs="0"/>

                <xs:element ref="SourceDataset" minOccurs="1" maxOccurs="1"/>

                <xs:element name="TargetDataset">
                    <xs:complexType>
                        <xs:choice>
                            <xs:element name="RestrictTo" minOccurs="0" type="xs:string"/>
                        </xs:choice>
                        <xs:attribute name="dataSource" type="xs:string" use="required"/>
                        <xs:attribute name="var" type="xs:string" use="required"/>
                        <xs:attribute name="typeUri" type="xs:string" use="optional"/>
                    </xs:complexType>
                </xs:element>

                <!-- Deprecated: <LinkCondition> has been renamed to <LinkageRule> but we still need to support it -->
                <xs:element name="LinkCondition" minOccurs="0">
                    <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="1">
                            <xs:element ref="Aggregate"/>
                            <xs:element ref="Compare"/>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>

                <xs:element ref="LinkageRule" minOccurs="0"/>

                <!-- Deprecated: Filters are now defined inside the linkage rule -->
                <xs:element ref="Filter" minOccurs="0"/>

                <xs:element ref="Outputs" minOccurs="0"/>

            </xs:sequence>
            <xs:attribute name="id" type="xs:string" use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="Silk">
        <xs:complexType>
            <xs:sequence>

                <xs:element name="Prefixes">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element minOccurs="0" maxOccurs="unbounded" name="Prefix">
                                <xs:complexType>
                                    <xs:attribute name="id" type="xs:string" use="required"/>
                                    <xs:attribute name="namespace" type="xs:string" use="required"/>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element name="DataSources" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="DataSource" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element ref="Dataset" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element name="Blocking" minOccurs="0">
                    <xs:complexType>
                        <xs:attribute name="enabled" type="xs:boolean" use="optional"/>
                        <xs:attribute name="blocks" type="xs:unsignedShort" use="optional"/>
                    </xs:complexType>
                </xs:element>

                <xs:element name="Interlinks" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="Interlink" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element name="Transforms" minOccurs="0">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="Transform" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element ref="Outputs" minOccurs="0"/>

            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>